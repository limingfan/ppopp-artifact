#include <stdio.h>
#include "cuda.h"
#define max(x,y)  ((x) > (y)? (x) : (y))
#define min(x,y)  ((x) < (y)? (x) : (y))
#define ceil(a,b) ((a) % (b) == 0 ? (a) / (b) : ((a) / (b)) + 1)

void check_error (const char* message) {
	cudaError_t error = cudaGetLastError ();
	if (error != cudaSuccess) {
		printf ("CUDA error : %s, %s\n", message, cudaGetErrorString (error));
		exit(-1);
	}
}

__global__ void __launch_bounds__ (128,2) sw4_a (double * uacc_0, double * __restrict__ u_in_0, double * __restrict__ u_in_1, double * __restrict__ u_in_2, double * __restrict__ mu_in, double * __restrict__ la_in, double * __restrict__ strx, double * __restrict__ stry, double * __restrict__ strz, int N) {
	//Determing the block's indices
	int blockdim_i= (int)(blockDim.x);
	int i0 = (int)(blockIdx.x)*(blockdim_i);
	int i = max (i0, 0) + (int)(threadIdx.x);
	int blockdim_j= (int)(blockDim.y);
	int j0 = (int)(blockIdx.y)*(blockdim_j);
	int j = max (j0, 0) + (int)(threadIdx.y);
	// Assumptions 
	int a1 = 1;
	double h = 3.7;
	double cof = 1e0 / ( h *  h);

	double (*u_0)[304][304] = (double (*)[304][304])u_in_0;
	double (*u_1)[304][304] = (double (*)[304][304])u_in_1;
	double (*u_2)[304][304] = (double (*)[304][304])u_in_2;
	double (*mu)[304][304] = (double (*)[304][304])mu_in;
	double (*la)[304][304] = (double (*)[304][304])la_in;

	/* Total 687 flops */
	if (i>=2 & j>=2 & i<=N-3 & j<=N-3) {
#pragma unroll 3 
		for (int k=2; k<=N-3; k+=2) {
			double a_mux1;
			double _t_0_;
			double a_mux2;
			double _t_1_;
			double a_mux3;
			double _t_2_;
			double a_mux4;
			double _t_3_;
			double a_muy1;
			double _t_4_;
			double a_muy2;
			double _t_5_;
			double a_muy3;
			double _t_6_;
			double a_muy4;
			double _t_7_;
			double a_muz1;
			double _t_8_;
			double a_muz2;
			double _t_9_;
			double a_muz3;
			double _t_10_;
			double a_muz4;
			double _t_11_;
			double _t_14_;
			double _t_16_;
			double _t_15_;
			double _t_13_;
			double _t_17_;
			double _t_19_;
			double _t_18_;
			double _t_20_;
			double _t_22_;
			double _t_21_;
			double _t_23_;
			double _t_25_;
			double _t_24_;
			double _t_12_;
			double _t_27_;
			double _t_26_;
			double _t_28_;
			double _t_29_;
			double _t_30_;
			double _t_32_;
			double _t_31_;
			double _t_33_;
			double _t_34_;
			double _t_35_;
			double r1;
			double _t_39_;
			double _t_37_;
			double _t_40_;
			double _t_41_;
			double _t_38_;
			double _t_43_;
			double _t_44_;
			double _t_42_;
			double _t_46_;
			double _t_47_;
			double _t_45_;
			double _t_48_;
			double _t_49_;
			double _t_36_;
			double _t_52_;
			double _t_50_;
			double _t_53_;
			double _t_54_;
			double _t_51_;
			double _t_56_;
			double _t_57_;
			double _t_55_;
			double _t_59_;
			double _t_60_;
			double _t_58_;
			double _t_61_;
			double _t_62_;
			double _t_65_;
			double _t_63_;
			double _t_66_;
			double _t_67_;
			double _t_64_;
			double _t_69_;
			double _t_70_;
			double _t_68_;
			double _t_72_;
			double _t_73_;
			double _t_71_;
			double _t_74_;
			double _t_75_;
			double _t_78_;
			double _t_76_;
			double _t_79_;
			double _t_80_;
			double _t_77_;
			double _t_82_;
			double _t_83_;
			double _t_81_;
			double _t_85_;
			double _t_86_;
			double _t_84_;
			double _t_87_;
			double _t_88_;
			double uacc_0kc0jc0ic0 = uacc_0[k*N*N+j*N+i];
			double b_mux1;
			double _t_89_;
			double b_mux2;
			double _t_90_;
			double b_mux3;
			double _t_91_;
			double b_mux4;
			double _t_92_;
			double b_muy1;
			double _t_93_;
			double b_muy2;
			double _t_94_;
			double b_muy3;
			double _t_95_;
			double b_muy4;
			double _t_96_;
			double b_muz1;
			double _t_97_;
			double b_muz2;
			double _t_98_;
			double b_muz3;
			double _t_99_;
			double b_muz4;
			double _t_100_;
			double _t_103_;
			double _t_105_;
			double _t_104_;
			double _t_102_;
			double _t_106_;
			double _t_108_;
			double _t_107_;
			double _t_109_;
			double _t_111_;
			double _t_110_;
			double _t_112_;
			double _t_114_;
			double _t_113_;
			double _t_101_;
			double _t_116_;
			double _t_115_;
			double _t_117_;
			double _t_118_;
			double _t_119_;
			double _t_121_;
			double _t_120_;
			double _t_122_;
			double _t_123_;
			double _t_124_;
			double r2;
			double _t_128_;
			double _t_126_;
			double _t_129_;
			double _t_130_;
			double _t_127_;
			double _t_132_;
			double _t_133_;
			double _t_131_;
			double _t_135_;
			double _t_136_;
			double _t_134_;
			double _t_137_;
			double _t_138_;
			double _t_125_;
			double _t_141_;
			double _t_139_;
			double _t_142_;
			double _t_143_;
			double _t_140_;
			double _t_145_;
			double _t_146_;
			double _t_144_;
			double _t_148_;
			double _t_149_;
			double _t_147_;
			double _t_150_;
			double _t_151_;
			double _t_154_;
			double _t_152_;
			double _t_155_;
			double _t_156_;
			double _t_153_;
			double _t_158_;
			double _t_159_;
			double _t_157_;
			double _t_161_;
			double _t_162_;
			double _t_160_;
			double _t_163_;
			double _t_164_;
			double _t_167_;
			double _t_165_;
			double _t_168_;
			double _t_169_;
			double _t_166_;
			double _t_171_;
			double _t_172_;
			double _t_170_;
			double _t_174_;
			double _t_175_;
			double _t_173_;
			double _t_176_;
			double _t_177_;
			double uacc_0kp1jc0ic0 = uacc_0[(k+1)*N*N+j*N+i];

			a_mux1 = mu[k][j][i-1] * strx[i-1];
			_t_0_ = mu[k][j][i] * strx[i];
			_t_0_ += mu[k][j][i-2] * strx[i-2];
			a_mux1 -= 3.0 / 4.0 * _t_0_;
			a_mux2 = mu[k][j][i-2] * strx[i-2];
			a_mux2 += mu[k][j][i+1] * strx[i+1];
			_t_1_ = mu[k][j][i] * strx[i];
			_t_1_ += mu[k][j][i-1] * strx[i-1];
			a_mux2 += 3.0 * _t_1_;
			a_mux3 = mu[k][j][i-1] * strx[i-1];
			a_mux3 += mu[k][j][i+2] * strx[i+2];
			_t_2_ = mu[k][j][i+1] * strx[i+1];
			_t_2_ += mu[k][j][i] * strx[i];
			a_mux3 += 3.0 * _t_2_;
			a_mux4 = mu[k][j][i+1] * strx[i+1];
			_t_3_ = mu[k][j][i] * strx[i];
			_t_3_ += mu[k][j][i+2] * strx[i+2];
			a_mux4 -= 3.0 / 4.0 * _t_3_;
			a_muy1 = mu[k][j-1][i] * stry[j-1];
			_t_4_ = mu[k][j][i] * stry[j];
			_t_4_ += mu[k][j-2][i] * stry[j-2];
			a_muy1 -= 3.0 / 4.0 * _t_4_;
			a_muy2 = mu[k][j-2][i] * stry[j-2];
			a_muy2 += mu[k][j+1][i] * stry[j+1];
			_t_5_ = mu[k][j][i] * stry[j];
			_t_5_ += mu[k][j-1][i] * stry[j-1];
			a_muy2 += 3.0 * _t_5_;
			a_muy3 = mu[k][j-1][i] * stry[j-1];
			a_muy3 += mu[k][j+2][i] * stry[j+2];
			_t_6_ = mu[k][j+1][i] * stry[j+1];
			_t_6_ += mu[k][j][i] * stry[j];
			a_muy3 += 3.0 * _t_6_;
			a_muy4 = mu[k][j+1][i] * stry[j+1];
			_t_7_ = mu[k][j][i] * stry[j];
			_t_7_ += mu[k][j+2][i] * stry[j+2];
			a_muy4 -= 3.0 / 4.0 * _t_7_;
			a_muz1 = mu[k-1][j][i] * strz[k-1];
			_t_8_ = mu[k][j][i] * strz[k];
			_t_8_ += mu[k-2][j][i] * strz[k-2];
			a_muz1 -= 3.0 / 4.0 * _t_8_;
			a_muz2 = mu[k-2][j][i] * strz[k-2];
			a_muz2 += mu[k+1][j][i] * strz[k+1];
			_t_9_ = mu[k][j][i] * strz[k];
			_t_9_ += mu[k-1][j][i] * strz[k-1];
			a_muz2 += 3.0 * _t_9_;
			a_muz3 = mu[k-1][j][i] * strz[k-1];
			a_muz3 += mu[k+2][j][i] * strz[k+2];
			_t_10_ = mu[k+1][j][i] * strz[k+1];
			_t_10_ += mu[k][j][i] * strz[k];
			a_muz3 += 3.0 * _t_10_;
			a_muz4 = mu[k+1][j][i] * strz[k+1];
			_t_11_ = mu[k][j][i] * strz[k];
			_t_11_ += mu[k+2][j][i] * strz[k+2];
			a_muz4 -= 3.0 / 4.0 * _t_11_;
			_t_14_ = 2.0 * a_mux1;
			_t_14_ += la[k][j][i-1] * strx[i-1];
			_t_16_ = la[k][j][i] * strx[i];
			_t_16_ += la[k][j][i-2] * strx[i-2];
			_t_14_ -= 3.0 / 4.0 * _t_16_;
			_t_15_ = u_0[k][j][i-2];
			_t_15_ -= u_0[k][j][i];
			_t_13_ = _t_14_ * _t_15_;
			_t_17_ = 2.0 * a_mux2;
			_t_17_ += la[k][j][i-2] * strx[i-2];
			_t_17_ += la[k][j][i+1] * strx[i+1];
			_t_19_ = la[k][j][i] * strx[i];
			_t_19_ += la[k][j][i-1] * strx[i-1];
			_t_17_ += 3.0 * _t_19_;
			_t_18_ = u_0[k][j][i-1];
			_t_18_ -= u_0[k][j][i];
			_t_13_ += _t_17_ * _t_18_;
			_t_20_ = 2.0 * a_mux3;
			_t_20_ += la[k][j][i-1] * strx[i-1];
			_t_20_ += la[k][j][i+2] * strx[i+2];
			_t_22_ = la[k][j][i+1] * strx[i+1];
			_t_22_ += la[k][j][i] * strx[i];
			_t_20_ += 3.0 * _t_22_;
			_t_21_ = u_0[k][j][i+1];
			_t_21_ -= u_0[k][j][i];
			_t_13_ += _t_20_ * _t_21_;
			_t_23_ = 2.0 * a_mux4;
			_t_23_ += la[k][j][i+1] * strx[i+1];
			_t_25_ = la[k][j][i] * strx[i];
			_t_25_ += la[k][j][i+2] * strx[i+2];
			_t_23_ -= 3.0 / 4.0 * _t_25_;
			_t_24_ = u_0[k][j][i+2];
			_t_24_ -= u_0[k][j][i];
			_t_13_ += _t_23_ * _t_24_;
			_t_12_ = strx[i] * _t_13_;
			_t_27_ = u_0[k][j-2][i];
			_t_27_ -= u_0[k][j][i];
			_t_26_ = a_muy1 * _t_27_;
			_t_28_ = u_0[k][j-1][i];
			_t_28_ -= u_0[k][j][i];
			_t_26_ += a_muy2 * _t_28_;
			_t_29_ = u_0[k][j+1][i];
			_t_29_ -= u_0[k][j][i];
			_t_26_ += a_muy3 * _t_29_;
			_t_30_ = u_0[k][j+2][i];
			_t_30_ -= u_0[k][j][i];
			_t_26_ += a_muy4 * _t_30_;
			_t_12_ += stry[j] * _t_26_;
			_t_32_ = u_0[k-2][j][i];
			_t_32_ -= u_0[k][j][i];
			_t_31_ = a_muz1 * _t_32_;
			_t_33_ = u_0[k-1][j][i];
			_t_33_ -= u_0[k][j][i];
			_t_31_ += a_muz2 * _t_33_;
			_t_34_ = u_0[k+1][j][i];
			_t_34_ -= u_0[k][j][i];
			_t_31_ += a_muz3 * _t_34_;
			_t_35_ = u_0[k+2][j][i];
			_t_35_ -= u_0[k][j][i];
			_t_31_ += a_muz4 * _t_35_;
			_t_12_ += strz[k] * _t_31_;
			r1 = 1.0 / 6.0 * _t_12_;
			_t_39_ = strx[i] * stry[j];
			_t_37_ = _t_39_ * 1.0 / 144.0;
			_t_40_ = u_1[k][j-2][i-2];
			_t_40_ -= u_1[k][j+2][i-2];
			_t_41_ = -u_1[k][j-1][i-2];
			_t_41_ += u_1[k][j+1][i-2];
			_t_40_ += 8.0 * _t_41_;
			_t_38_ = la[k][j][i-2] * _t_40_;
			_t_43_ = u_1[k][j-2][i-1];
			_t_43_ -= u_1[k][j+2][i-1];
			_t_44_ = -u_1[k][j-1][i-1];
			_t_44_ += u_1[k][j+1][i-1];
			_t_43_ += 8.0 * _t_44_;
			_t_42_ = la[k][j][i-1] * _t_43_;
			_t_38_ -= 8.0 * _t_42_;
			_t_46_ = u_1[k][j-2][i+1];
			_t_46_ -= u_1[k][j+2][i+1];
			_t_47_ = -u_1[k][j-1][i+1];
			_t_47_ += u_1[k][j+1][i+1];
			_t_46_ += 8.0 * _t_47_;
			_t_45_ = la[k][j][i+1] * _t_46_;
			_t_38_ += 8.0 * _t_45_;
			_t_48_ = u_1[k][j-2][i+2];
			_t_48_ -= u_1[k][j+2][i+2];
			_t_49_ = -u_1[k][j-1][i+2];
			_t_49_ += u_1[k][j+1][i+2];
			_t_48_ += 8.0 * _t_49_;
			_t_38_ -= la[k][j][i+2] * _t_48_;
			_t_36_ = _t_37_ * _t_38_;
			_t_52_ = strx[i] * strz[k];
			_t_50_ = _t_52_ * 1.0 / 144.0;
			_t_53_ = u_2[k-2][j][i-2];
			_t_53_ -= u_2[k+2][j][i-2];
			_t_54_ = -u_2[k-1][j][i-2];
			_t_54_ += u_2[k+1][j][i-2];
			_t_53_ += 8.0 * _t_54_;
			_t_51_ = la[k][j][i-2] * _t_53_;
			_t_56_ = u_2[k-2][j][i-1];
			_t_56_ -= u_2[k+2][j][i-1];
			_t_57_ = -u_2[k-1][j][i-1];
			_t_57_ += u_2[k+1][j][i-1];
			_t_56_ += 8.0 * _t_57_;
			_t_55_ = la[k][j][i-1] * _t_56_;
			_t_51_ -= 8.0 * _t_55_;
			_t_59_ = u_2[k-2][j][i+1];
			_t_59_ -= u_2[k+2][j][i+1];
			_t_60_ = -u_2[k-1][j][i+1];
			_t_60_ += u_2[k+1][j][i+1];
			_t_59_ += 8.0 * _t_60_;
			_t_58_ = la[k][j][i+1] * _t_59_;
			_t_51_ += 8.0 * _t_58_;
			_t_61_ = u_2[k-2][j][i+2];
			_t_61_ -= u_2[k+2][j][i+2];
			_t_62_ = -u_2[k-1][j][i+2];
			_t_62_ += u_2[k+1][j][i+2];
			_t_61_ += 8.0 * _t_62_;
			_t_51_ -= la[k][j][i+2] * _t_61_;
			_t_36_ += _t_50_ * _t_51_;
			_t_65_ = strx[i] * stry[j];
			_t_63_ = _t_65_ * 1.0 / 144.0;
			_t_66_ = u_1[k][j-2][i-2];
			_t_66_ -= u_1[k][j-2][i+2];
			_t_67_ = -u_1[k][j-2][i-1];
			_t_67_ += u_1[k][j-2][i+1];
			_t_66_ += 8.0 * _t_67_;
			_t_64_ = mu[k][j-2][i] * _t_66_;
			_t_69_ = u_1[k][j-1][i-2];
			_t_69_ -= u_1[k][j-1][i+2];
			_t_70_ = -u_1[k][j-1][i-1];
			_t_70_ += u_1[k][j-1][i+1];
			_t_69_ += 8.0 * _t_70_;
			_t_68_ = mu[k][j-1][i] * _t_69_;
			_t_64_ -= 8.0 * _t_68_;
			_t_72_ = u_1[k][j+1][i-2];
			_t_72_ -= u_1[k][j+1][i+2];
			_t_73_ = -u_1[k][j+1][i-1];
			_t_73_ += u_1[k][j+1][i+1];
			_t_72_ += 8.0 * _t_73_;
			_t_71_ = mu[k][j+1][i] * _t_72_;
			_t_64_ += 8.0 * _t_71_;
			_t_74_ = u_1[k][j+2][i-2];
			_t_74_ -= u_1[k][j+2][i+2];
			_t_75_ = -u_1[k][j+2][i-1];
			_t_75_ += u_1[k][j+2][i+1];
			_t_74_ += 8.0 * _t_75_;
			_t_64_ -= mu[k][j+2][i] * _t_74_;
			_t_36_ += _t_63_ * _t_64_;
			_t_78_ = strx[i] * strz[k];
			_t_76_ = _t_78_ * 1.0 / 144.0;
			_t_79_ = u_2[k-2][j][i-2];
			_t_79_ -= u_2[k-2][j][i+2];
			_t_80_ = -u_2[k-2][j][i-1];
			_t_80_ += u_2[k-2][j][i+1];
			_t_79_ += 8.0 * _t_80_;
			_t_77_ = mu[k-2][j][i] * _t_79_;
			_t_82_ = u_2[k-1][j][i-2];
			_t_82_ -= u_2[k-1][j][i+2];
			_t_83_ = -u_2[k-1][j][i-1];
			_t_83_ += u_2[k-1][j][i+1];
			_t_82_ += 8.0 * _t_83_;
			_t_81_ = mu[k-1][j][i] * _t_82_;
			_t_77_ -= 8.0 * _t_81_;
			_t_85_ = u_2[k+1][j][i-2];
			_t_85_ -= u_2[k+1][j][i+2];
			_t_86_ = -u_2[k+1][j][i-1];
			_t_86_ += u_2[k+1][j][i+1];
			_t_85_ += 8.0 * _t_86_;
			_t_84_ = mu[k+1][j][i] * _t_85_;
			_t_77_ += 8.0 * _t_84_;
			_t_87_ = u_2[k+2][j][i-2];
			_t_87_ -= u_2[k+2][j][i+2];
			_t_88_ = -u_2[k+2][j][i-1];
			_t_88_ += u_2[k+2][j][i+1];
			_t_87_ += 8.0 * _t_88_;
			_t_77_ -= mu[k+2][j][i] * _t_87_;
			_t_36_ += _t_76_ * _t_77_;
			r1 += _t_36_;
			uacc_0kc0jc0ic0 = a1 * uacc_0kc0jc0ic0;
			uacc_0kc0jc0ic0 += cof * r1;
			uacc_0[k*N*N+j*N+i] = uacc_0kc0jc0ic0;
			b_mux1 = mu[k+1][j][i-1] * strx[i-1];
			_t_89_ = mu[k+1][j][i] * strx[i];
			_t_89_ += mu[k+1][j][i-2] * strx[i-2];
			b_mux1 -= 3.0 / 4.0 * _t_89_;
			b_mux2 = mu[k+1][j][i-2] * strx[i-2];
			b_mux2 += mu[k+1][j][i+1] * strx[i+1];
			_t_90_ = mu[k+1][j][i] * strx[i];
			_t_90_ += mu[k+1][j][i-1] * strx[i-1];
			b_mux2 += 3.0 * _t_90_;
			b_mux3 = mu[k+1][j][i-1] * strx[i-1];
			b_mux3 += mu[k+1][j][i+2] * strx[i+2];
			_t_91_ = mu[k+1][j][i+1] * strx[i+1];
			_t_91_ += mu[k+1][j][i] * strx[i];
			b_mux3 += 3.0 * _t_91_;
			b_mux4 = mu[k+1][j][i+1] * strx[i+1];
			_t_92_ = mu[k+1][j][i] * strx[i];
			_t_92_ += mu[k+1][j][i+2] * strx[i+2];
			b_mux4 -= 3.0 / 4.0 * _t_92_;
			b_muy1 = mu[k+1][j-1][i] * stry[j-1];
			_t_93_ = mu[k+1][j][i] * stry[j];
			_t_93_ += mu[k+1][j-2][i] * stry[j-2];
			b_muy1 -= 3.0 / 4.0 * _t_93_;
			b_muy2 = mu[k+1][j-2][i] * stry[j-2];
			b_muy2 += mu[k+1][j+1][i] * stry[j+1];
			_t_94_ = mu[k+1][j][i] * stry[j];
			_t_94_ += mu[k+1][j-1][i] * stry[j-1];
			b_muy2 += 3.0 * _t_94_;
			b_muy3 = mu[k+1][j-1][i] * stry[j-1];
			b_muy3 += mu[k+1][j+2][i] * stry[j+2];
			_t_95_ = mu[k+1][j+1][i] * stry[j+1];
			_t_95_ += mu[k+1][j][i] * stry[j];
			b_muy3 += 3.0 * _t_95_;
			b_muy4 = mu[k+1][j+1][i] * stry[j+1];
			_t_96_ = mu[k+1][j][i] * stry[j];
			_t_96_ += mu[k+1][j+2][i] * stry[j+2];
			b_muy4 -= 3.0 / 4.0 * _t_96_;
			b_muz1 = mu[k][j][i] * strz[k];
			_t_97_ = mu[k+1][j][i] * strz[k+1];
			_t_97_ += mu[k-1][j][i] * strz[k-1];
			b_muz1 -= 3.0 / 4.0 * _t_97_;
			b_muz2 = mu[k-1][j][i] * strz[k-1];
			b_muz2 += mu[k+2][j][i] * strz[k+2];
			_t_98_ = mu[k+1][j][i] * strz[k+1];
			_t_98_ += mu[k][j][i] * strz[k];
			b_muz2 += 3.0 * _t_98_;
			b_muz3 = mu[k][j][i] * strz[k];
			b_muz3 += mu[k+3][j][i] * strz[k+3];
			_t_99_ = mu[k+2][j][i] * strz[k+2];
			_t_99_ += mu[k+1][j][i] * strz[k+1];
			b_muz3 += 3.0 * _t_99_;
			b_muz4 = mu[k+2][j][i] * strz[k+2];
			_t_100_ = mu[k+1][j][i] * strz[k+1];
			_t_100_ += mu[k+3][j][i] * strz[k+3];
			b_muz4 -= 3.0 / 4.0 * _t_100_;
			_t_103_ = 2.0 * b_mux1;
			_t_103_ += la[k+1][j][i-1] * strx[i-1];
			_t_105_ = la[k+1][j][i] * strx[i];
			_t_105_ += la[k+1][j][i-2] * strx[i-2];
			_t_103_ -= 3.0 / 4.0 * _t_105_;
			_t_104_ = u_0[k+1][j][i-2];
			_t_104_ -= u_0[k+1][j][i];
			_t_102_ = _t_103_ * _t_104_;
			_t_106_ = 2.0 * b_mux2;
			_t_106_ += la[k+1][j][i-2] * strx[i-2];
			_t_106_ += la[k+1][j][i+1] * strx[i+1];
			_t_108_ = la[k+1][j][i] * strx[i];
			_t_108_ += la[k+1][j][i-1] * strx[i-1];
			_t_106_ += 3.0 * _t_108_;
			_t_107_ = u_0[k+1][j][i-1];
			_t_107_ -= u_0[k+1][j][i];
			_t_102_ += _t_106_ * _t_107_;
			_t_109_ = 2.0 * b_mux3;
			_t_109_ += la[k+1][j][i-1] * strx[i-1];
			_t_109_ += la[k+1][j][i+2] * strx[i+2];
			_t_111_ = la[k+1][j][i+1] * strx[i+1];
			_t_111_ += la[k+1][j][i] * strx[i];
			_t_109_ += 3.0 * _t_111_;
			_t_110_ = u_0[k+1][j][i+1];
			_t_110_ -= u_0[k+1][j][i];
			_t_102_ += _t_109_ * _t_110_;
			_t_112_ = 2.0 * b_mux4;
			_t_112_ += la[k+1][j][i+1] * strx[i+1];
			_t_114_ = la[k+1][j][i] * strx[i];
			_t_114_ += la[k+1][j][i+2] * strx[i+2];
			_t_112_ -= 3.0 / 4.0 * _t_114_;
			_t_113_ = u_0[k+1][j][i+2];
			_t_113_ -= u_0[k+1][j][i];
			_t_102_ += _t_112_ * _t_113_;
			_t_101_ = strx[i] * _t_102_;
			_t_116_ = u_0[k+1][j-2][i];
			_t_116_ -= u_0[k+1][j][i];
			_t_115_ = b_muy1 * _t_116_;
			_t_117_ = u_0[k+1][j-1][i];
			_t_117_ -= u_0[k+1][j][i];
			_t_115_ += b_muy2 * _t_117_;
			_t_118_ = u_0[k+1][j+1][i];
			_t_118_ -= u_0[k+1][j][i];
			_t_115_ += b_muy3 * _t_118_;
			_t_119_ = u_0[k+1][j+2][i];
			_t_119_ -= u_0[k+1][j][i];
			_t_115_ += b_muy4 * _t_119_;
			_t_101_ += stry[j] * _t_115_;
			_t_121_ = u_0[k-1][j][i];
			_t_121_ -= u_0[k+1][j][i];
			_t_120_ = b_muz1 * _t_121_;
			_t_122_ = u_0[k][j][i];
			_t_122_ -= u_0[k+1][j][i];
			_t_120_ += b_muz2 * _t_122_;
			_t_123_ = u_0[k+2][j][i];
			_t_123_ -= u_0[k+1][j][i];
			_t_120_ += b_muz3 * _t_123_;
			_t_124_ = u_0[k+3][j][i];
			_t_124_ -= u_0[k+1][j][i];
			_t_120_ += b_muz4 * _t_124_;
			_t_101_ += strz[k+1] * _t_120_;
			r2 = 1.0 / 6.0 * _t_101_;
			_t_128_ = strx[i] * stry[j];
			_t_126_ = _t_128_ * 1.0 / 144.0;
			_t_129_ = u_1[k+1][j-2][i-2];
			_t_129_ -= u_1[k+1][j+2][i-2];
			_t_130_ = -u_1[k+1][j-1][i-2];
			_t_130_ += u_1[k+1][j+1][i-2];
			_t_129_ += 8.0 * _t_130_;
			_t_127_ = la[k+1][j][i-2] * _t_129_;
			_t_132_ = u_1[k+1][j-2][i-1];
			_t_132_ -= u_1[k+1][j+2][i-1];
			_t_133_ = -u_1[k+1][j-1][i-1];
			_t_133_ += u_1[k+1][j+1][i-1];
			_t_132_ += 8.0 * _t_133_;
			_t_131_ = la[k+1][j][i-1] * _t_132_;
			_t_127_ -= 8.0 * _t_131_;
			_t_135_ = u_1[k+1][j-2][i+1];
			_t_135_ -= u_1[k+1][j+2][i+1];
			_t_136_ = -u_1[k+1][j-1][i+1];
			_t_136_ += u_1[k+1][j+1][i+1];
			_t_135_ += 8.0 * _t_136_;
			_t_134_ = la[k+1][j][i+1] * _t_135_;
			_t_127_ += 8.0 * _t_134_;
			_t_137_ = u_1[k+1][j-2][i+2];
			_t_137_ -= u_1[k+1][j+2][i+2];
			_t_138_ = -u_1[k+1][j-1][i+2];
			_t_138_ += u_1[k+1][j+1][i+2];
			_t_137_ += 8.0 * _t_138_;
			_t_127_ -= la[k+1][j][i+2] * _t_137_;
			_t_125_ = _t_126_ * _t_127_;
			_t_141_ = strx[i] * strz[k+1];
			_t_139_ = _t_141_ * 1.0 / 144.0;
			_t_142_ = u_2[k-1][j][i-2];
			_t_142_ -= u_2[k+3][j][i-2];
			_t_143_ = -u_2[k][j][i-2];
			_t_143_ += u_2[k+2][j][i-2];
			_t_142_ += 8.0 * _t_143_;
			_t_140_ = la[k+1][j][i-2] * _t_142_;
			_t_145_ = u_2[k-1][j][i-1];
			_t_145_ -= u_2[k+3][j][i-1];
			_t_146_ = -u_2[k][j][i-1];
			_t_146_ += u_2[k+2][j][i-1];
			_t_145_ += 8.0 * _t_146_;
			_t_144_ = la[k+1][j][i-1] * _t_145_;
			_t_140_ -= 8.0 * _t_144_;
			_t_148_ = u_2[k-1][j][i+1];
			_t_148_ -= u_2[k+3][j][i+1];
			_t_149_ = -u_2[k][j][i+1];
			_t_149_ += u_2[k+2][j][i+1];
			_t_148_ += 8.0 * _t_149_;
			_t_147_ = la[k+1][j][i+1] * _t_148_;
			_t_140_ += 8.0 * _t_147_;
			_t_150_ = u_2[k-1][j][i+2];
			_t_150_ -= u_2[k+3][j][i+2];
			_t_151_ = -u_2[k][j][i+2];
			_t_151_ += u_2[k+2][j][i+2];
			_t_150_ += 8.0 * _t_151_;
			_t_140_ -= la[k+1][j][i+2] * _t_150_;
			_t_125_ += _t_139_ * _t_140_;
			_t_154_ = strx[i] * stry[j];
			_t_152_ = _t_154_ * 1.0 / 144.0;
			_t_155_ = u_1[k+1][j-2][i-2];
			_t_155_ -= u_1[k+1][j-2][i+2];
			_t_156_ = -u_1[k+1][j-2][i-1];
			_t_156_ += u_1[k+1][j-2][i+1];
			_t_155_ += 8.0 * _t_156_;
			_t_153_ = mu[k+1][j-2][i] * _t_155_;
			_t_158_ = u_1[k+1][j-1][i-2];
			_t_158_ -= u_1[k+1][j-1][i+2];
			_t_159_ = -u_1[k+1][j-1][i-1];
			_t_159_ += u_1[k+1][j-1][i+1];
			_t_158_ += 8.0 * _t_159_;
			_t_157_ = mu[k+1][j-1][i] * _t_158_;
			_t_153_ -= 8.0 * _t_157_;
			_t_161_ = u_1[k+1][j+1][i-2];
			_t_161_ -= u_1[k+1][j+1][i+2];
			_t_162_ = -u_1[k+1][j+1][i-1];
			_t_162_ += u_1[k+1][j+1][i+1];
			_t_161_ += 8.0 * _t_162_;
			_t_160_ = mu[k+1][j+1][i] * _t_161_;
			_t_153_ += 8.0 * _t_160_;
			_t_163_ = u_1[k+1][j+2][i-2];
			_t_163_ -= u_1[k+1][j+2][i+2];
			_t_164_ = -u_1[k+1][j+2][i-1];
			_t_164_ += u_1[k+1][j+2][i+1];
			_t_163_ += 8.0 * _t_164_;
			_t_153_ -= mu[k+1][j+2][i] * _t_163_;
			_t_125_ += _t_152_ * _t_153_;
			_t_167_ = strx[i] * strz[k+1];
			_t_165_ = _t_167_ * 1.0 / 144.0;
			_t_168_ = u_2[k-1][j][i-2];
			_t_168_ -= u_2[k-1][j][i+2];
			_t_169_ = -u_2[k-1][j][i-1];
			_t_169_ += u_2[k-1][j][i+1];
			_t_168_ += 8.0 * _t_169_;
			_t_166_ = mu[k-1][j][i] * _t_168_;
			_t_171_ = u_2[k][j][i-2];
			_t_171_ -= u_2[k][j][i+2];
			_t_172_ = -u_2[k][j][i-1];
			_t_172_ += u_2[k][j][i+1];
			_t_171_ += 8.0 * _t_172_;
			_t_170_ = mu[k][j][i] * _t_171_;
			_t_166_ -= 8.0 * _t_170_;
			_t_174_ = u_2[k+2][j][i-2];
			_t_174_ -= u_2[k+2][j][i+2];
			_t_175_ = -u_2[k+2][j][i-1];
			_t_175_ += u_2[k+2][j][i+1];
			_t_174_ += 8.0 * _t_175_;
			_t_173_ = mu[k+2][j][i] * _t_174_;
			_t_166_ += 8.0 * _t_173_;
			_t_176_ = u_2[k+3][j][i-2];
			_t_176_ -= u_2[k+3][j][i+2];
			_t_177_ = -u_2[k+3][j][i-1];
			_t_177_ += u_2[k+3][j][i+1];
			_t_176_ += 8.0 * _t_177_;
			_t_166_ -= mu[k+3][j][i] * _t_176_;
			_t_125_ += _t_165_ * _t_166_;
			r2 += _t_125_;
			uacc_0kp1jc0ic0 = a1 * uacc_0kp1jc0ic0;
			uacc_0kp1jc0ic0 += cof * r2;
			uacc_0[(k+1)*N*N+j*N+i] = uacc_0kp1jc0ic0;
		} 
	}
}

__global__ void __launch_bounds__ (128,2) sw4_b (double * uacc_1, double * __restrict__ u_in_0, double * __restrict__ u_in_1, double * __restrict__ u_in_2, double * __restrict__ mu_in, double * __restrict__ la_in, double * __restrict__ strx, double * __restrict__ stry, double * __restrict__ strz, int N) {
	//Determing the block's indices
	int blockdim_i= (int)(blockDim.x);
	int i0 = (int)(blockIdx.x)*(blockdim_i);
	int i = max (i0, 0) + (int)(threadIdx.x);
	int blockdim_j= (int)(blockDim.y);
	int j0 = (int)(blockIdx.y)*(blockdim_j);
	int j = max (j0, 0) + (int)(threadIdx.y);
	// Assumptions 
	int a1 = 1;
	double h = 3.7;
	double cof = 1e0 / ( h *  h);

	double (*u_0)[304][304] = (double (*)[304][304])u_in_0;
	double (*u_1)[304][304] = (double (*)[304][304])u_in_1;
	double (*u_2)[304][304] = (double (*)[304][304])u_in_2;
	double (*mu)[304][304] = (double (*)[304][304])mu_in;
	double (*la)[304][304] = (double (*)[304][304])la_in;

	/* Total 687 flops */
	if (i>=2 & j>=2 & i<=N-3 & j<=N-3) {
#pragma unroll 2 
		for (int k=2; k<=N-3; k+=2) {
			double a_mux1;
			double _t_0_;
			double a_mux2;
			double _t_1_;
			double a_mux3;
			double _t_2_;
			double a_mux4;
			double _t_3_;
			double a_muy1;
			double _t_4_;
			double a_muy2;
			double _t_5_;
			double a_muy3;
			double _t_6_;
			double a_muy4;
			double _t_7_;
			double a_muz1;
			double _t_8_;
			double a_muz2;
			double _t_9_;
			double a_muz3;
			double _t_10_;
			double a_muz4;
			double _t_11_;
			double _t_14_;
			double _t_13_;
			double _t_15_;
			double _t_16_;
			double _t_17_;
			double _t_12_;
			double _t_19_;
			double _t_21_;
			double _t_20_;
			double _t_18_;
			double _t_22_;
			double _t_24_;
			double _t_23_;
			double _t_25_;
			double _t_27_;
			double _t_26_;
			double _t_28_;
			double _t_30_;
			double _t_29_;
			double _t_32_;
			double _t_31_;
			double _t_33_;
			double _t_34_;
			double _t_35_;
			double r2;
			double _t_39_;
			double _t_37_;
			double _t_40_;
			double _t_41_;
			double _t_38_;
			double _t_43_;
			double _t_44_;
			double _t_42_;
			double _t_46_;
			double _t_47_;
			double _t_45_;
			double _t_48_;
			double _t_49_;
			double _t_36_;
			double _t_52_;
			double _t_50_;
			double _t_53_;
			double _t_54_;
			double _t_51_;
			double _t_56_;
			double _t_57_;
			double _t_55_;
			double _t_59_;
			double _t_60_;
			double _t_58_;
			double _t_61_;
			double _t_62_;
			double _t_65_;
			double _t_63_;
			double _t_66_;
			double _t_67_;
			double _t_64_;
			double _t_69_;
			double _t_70_;
			double _t_68_;
			double _t_72_;
			double _t_73_;
			double _t_71_;
			double _t_74_;
			double _t_75_;
			double _t_78_;
			double _t_76_;
			double _t_79_;
			double _t_80_;
			double _t_77_;
			double _t_82_;
			double _t_83_;
			double _t_81_;
			double _t_85_;
			double _t_86_;
			double _t_84_;
			double _t_87_;
			double _t_88_;
			double uacc_1kc0jc0ic0 = uacc_1[k*N*N+j*N+i];
			double b_mux1;
			double _t_89_;
			double b_mux2;
			double _t_90_;
			double b_mux3;
			double _t_91_;
			double b_mux4;
			double _t_92_;
			double b_muy1;
			double _t_93_;
			double b_muy2;
			double _t_94_;
			double b_muy3;
			double _t_95_;
			double b_muy4;
			double _t_96_;
			double b_muz1;
			double _t_97_;
			double b_muz2;
			double _t_98_;
			double b_muz3;
			double _t_99_;
			double b_muz4;
			double _t_100_;
			double _t_103_;
			double _t_102_;
			double _t_104_;
			double _t_105_;
			double _t_106_;
			double _t_101_;
			double _t_108_;
			double _t_110_;
			double _t_109_;
			double _t_107_;
			double _t_111_;
			double _t_113_;
			double _t_112_;
			double _t_114_;
			double _t_116_;
			double _t_115_;
			double _t_117_;
			double _t_119_;
			double _t_118_;
			double _t_121_;
			double _t_120_;
			double _t_122_;
			double _t_123_;
			double _t_124_;
			double r3;
			double _t_128_;
			double _t_126_;
			double _t_129_;
			double _t_130_;
			double _t_127_;
			double _t_132_;
			double _t_133_;
			double _t_131_;
			double _t_135_;
			double _t_136_;
			double _t_134_;
			double _t_137_;
			double _t_138_;
			double _t_125_;
			double _t_141_;
			double _t_139_;
			double _t_142_;
			double _t_143_;
			double _t_140_;
			double _t_145_;
			double _t_146_;
			double _t_144_;
			double _t_148_;
			double _t_149_;
			double _t_147_;
			double _t_150_;
			double _t_151_;
			double _t_154_;
			double _t_152_;
			double _t_155_;
			double _t_156_;
			double _t_153_;
			double _t_158_;
			double _t_159_;
			double _t_157_;
			double _t_161_;
			double _t_162_;
			double _t_160_;
			double _t_163_;
			double _t_164_;
			double _t_167_;
			double _t_165_;
			double _t_168_;
			double _t_169_;
			double _t_166_;
			double _t_171_;
			double _t_172_;
			double _t_170_;
			double _t_174_;
			double _t_175_;
			double _t_173_;
			double _t_176_;
			double _t_177_;
			double uacc_1kp1jc0ic0 = uacc_1[(k+1)*N*N+j*N+i];

			a_mux1 = mu[k][j][i-1] * strx[i-1];
			_t_0_ = mu[k][j][i] * strx[i];
			_t_0_ += mu[k][j][i-2] * strx[i-2];
			a_mux1 -= 3.0 / 4.0 * _t_0_;
			a_mux2 = mu[k][j][i-2] * strx[i-2];
			a_mux2 += mu[k][j][i+1] * strx[i+1];
			_t_1_ = mu[k][j][i] * strx[i];
			_t_1_ += mu[k][j][i-1] * strx[i-1];
			a_mux2 += 3.0 * _t_1_;
			a_mux3 = mu[k][j][i-1] * strx[i-1];
			a_mux3 += mu[k][j][i+2] * strx[i+2];
			_t_2_ = mu[k][j][i+1] * strx[i+1];
			_t_2_ += mu[k][j][i] * strx[i];
			a_mux3 += 3.0 * _t_2_;
			a_mux4 = mu[k][j][i+1] * strx[i+1];
			_t_3_ = mu[k][j][i] * strx[i];
			_t_3_ += mu[k][j][i+2] * strx[i+2];
			a_mux4 -= 3.0 / 4.0 * _t_3_;
			a_muy1 = mu[k][j-1][i] * stry[j-1];
			_t_4_ = mu[k][j][i] * stry[j];
			_t_4_ += mu[k][j-2][i] * stry[j-2];
			a_muy1 -= 3.0 / 4.0 * _t_4_;
			a_muy2 = mu[k][j-2][i] * stry[j-2];
			a_muy2 += mu[k][j+1][i] * stry[j+1];
			_t_5_ = mu[k][j][i] * stry[j];
			_t_5_ += mu[k][j-1][i] * stry[j-1];
			a_muy2 += 3.0 * _t_5_;
			a_muy3 = mu[k][j-1][i] * stry[j-1];
			a_muy3 += mu[k][j+2][i] * stry[j+2];
			_t_6_ = mu[k][j+1][i] * stry[j+1];
			_t_6_ += mu[k][j][i] * stry[j];
			a_muy3 += 3.0 * _t_6_;
			a_muy4 = mu[k][j+1][i] * stry[j+1];
			_t_7_ = mu[k][j][i] * stry[j];
			_t_7_ += mu[k][j+2][i] * stry[j+2];
			a_muy4 -= 3.0 / 4.0 * _t_7_;
			a_muz1 = mu[k-1][j][i] * strz[k-1];
			_t_8_ = mu[k][j][i] * strz[k];
			_t_8_ += mu[k-2][j][i] * strz[k-2];
			a_muz1 -= 3.0 / 4.0 * _t_8_;
			a_muz2 = mu[k-2][j][i] * strz[k-2];
			a_muz2 += mu[k+1][j][i] * strz[k+1];
			_t_9_ = mu[k][j][i] * strz[k];
			_t_9_ += mu[k-1][j][i] * strz[k-1];
			a_muz2 += 3.0 * _t_9_;
			a_muz3 = mu[k-1][j][i] * strz[k-1];
			a_muz3 += mu[k+2][j][i] * strz[k+2];
			_t_10_ = mu[k+1][j][i] * strz[k+1];
			_t_10_ += mu[k][j][i] * strz[k];
			a_muz3 += 3.0 * _t_10_;
			a_muz4 = mu[k+1][j][i] * strz[k+1];
			_t_11_ = mu[k][j][i] * strz[k];
			_t_11_ += mu[k+2][j][i] * strz[k+2];
			a_muz4 -= 3.0 / 4.0 * _t_11_;
			_t_14_ = u_1[k][j][i-2];
			_t_14_ -= u_1[k][j][i];
			_t_13_ = a_mux1 * _t_14_;
			_t_15_ = u_1[k][j][i-1];
			_t_15_ -= u_1[k][j][i];
			_t_13_ += a_mux2 * _t_15_;
			_t_16_ = u_1[k][j][i+1];
			_t_16_ -= u_1[k][j][i];
			_t_13_ += a_mux3 * _t_16_;
			_t_17_ = u_1[k][j][i+2];
			_t_17_ -= u_1[k][j][i];
			_t_13_ += a_mux4 * _t_17_;
			_t_12_ = strx[i] * _t_13_;
			_t_19_ = 2.0 * a_muy1;
			_t_19_ += la[k][j-1][i] * stry[j-1];
			_t_21_ = la[k][j][i] * stry[j];
			_t_21_ += la[k][j-2][i] * stry[j-2];
			_t_19_ -= 3.0 / 4.0 * _t_21_;
			_t_20_ = u_1[k][j-2][i];
			_t_20_ -= u_1[k][j][i];
			_t_18_ = _t_19_ * _t_20_;
			_t_22_ = 2.0 * a_muy2;
			_t_22_ += la[k][j-2][i] * stry[j-2];
			_t_22_ += la[k][j+1][i] * stry[j+1];
			_t_24_ = la[k][j][i] * stry[j];
			_t_24_ += la[k][j-1][i] * stry[j-1];
			_t_22_ += 3.0 * _t_24_;
			_t_23_ = u_1[k][j-1][i];
			_t_23_ -= u_1[k][j][i];
			_t_18_ += _t_22_ * _t_23_;
			_t_25_ = 2.0 * a_muy3;
			_t_25_ += la[k][j-1][i] * stry[j-1];
			_t_25_ += la[k][j+2][i] * stry[j+2];
			_t_27_ = la[k][j+1][i] * stry[j+1];
			_t_27_ += la[k][j][i] * stry[j];
			_t_25_ += 3.0 * _t_27_;
			_t_26_ = u_1[k][j+1][i];
			_t_26_ -= u_1[k][j][i];
			_t_18_ += _t_25_ * _t_26_;
			_t_28_ = 2.0 * a_muy4;
			_t_28_ += la[k][j+1][i] * stry[j+1];
			_t_30_ = la[k][j][i] * stry[j];
			_t_30_ += la[k][j+2][i] * stry[j+2];
			_t_28_ -= 3.0 / 4.0 * _t_30_;
			_t_29_ = u_1[k][j+2][i];
			_t_29_ -= u_1[k][j][i];
			_t_18_ += _t_28_ * _t_29_;
			_t_12_ += stry[j] * _t_18_;
			_t_32_ = u_1[k-2][j][i];
			_t_32_ -= u_1[k][j][i];
			_t_31_ = a_muz1 * _t_32_;
			_t_33_ = u_1[k-1][j][i];
			_t_33_ -= u_1[k][j][i];
			_t_31_ += a_muz2 * _t_33_;
			_t_34_ = u_1[k+1][j][i];
			_t_34_ -= u_1[k][j][i];
			_t_31_ += a_muz3 * _t_34_;
			_t_35_ = u_1[k+2][j][i];
			_t_35_ -= u_1[k][j][i];
			_t_31_ += a_muz4 * _t_35_;
			_t_12_ += strz[k] * _t_31_;
			r2 = 1.0 / 6.0 * _t_12_;
			_t_39_ = strx[i] * stry[j];
			_t_37_ = _t_39_ * 1.0 / 144.0;
			_t_40_ = u_0[k][j-2][i-2];
			_t_40_ -= u_0[k][j+2][i-2];
			_t_41_ = -u_0[k][j-1][i-2];
			_t_41_ += u_0[k][j+1][i-2];
			_t_40_ += 8.0 * _t_41_;
			_t_38_ = mu[k][j][i-2] * _t_40_;
			_t_43_ = u_0[k][j-2][i-1];
			_t_43_ -= u_0[k][j+2][i-1];
			_t_44_ = -u_0[k][j-1][i-1];
			_t_44_ += u_0[k][j+1][i-1];
			_t_43_ += 8.0 * _t_44_;
			_t_42_ = mu[k][j][i-1] * _t_43_;
			_t_38_ -= 8.0 * _t_42_;
			_t_46_ = u_0[k][j-2][i+1];
			_t_46_ -= u_0[k][j+2][i+1];
			_t_47_ = -u_0[k][j-1][i+1];
			_t_47_ += u_0[k][j+1][i+1];
			_t_46_ += 8.0 * _t_47_;
			_t_45_ = mu[k][j][i+1] * _t_46_;
			_t_38_ += 8.0 * _t_45_;
			_t_48_ = u_0[k][j-2][i+2];
			_t_48_ -= u_0[k][j+2][i+2];
			_t_49_ = -u_0[k][j-1][i+2];
			_t_49_ += u_0[k][j+1][i+2];
			_t_48_ += 8.0 * _t_49_;
			_t_38_ -= mu[k][j][i+2] * _t_48_;
			_t_36_ = _t_37_ * _t_38_;
			_t_52_ = strx[i] * stry[j];
			_t_50_ = _t_52_ * 1.0 / 144.0;
			_t_53_ = u_0[k][j-2][i-2];
			_t_53_ -= u_0[k][j-2][i+2];
			_t_54_ = -u_0[k][j-2][i-1];
			_t_54_ += u_0[k][j-2][i+1];
			_t_53_ += 8.0 * _t_54_;
			_t_51_ = la[k][j-2][i] * _t_53_;
			_t_56_ = u_0[k][j-1][i-2];
			_t_56_ -= u_0[k][j-1][i+2];
			_t_57_ = -u_0[k][j-1][i-1];
			_t_57_ += u_0[k][j-1][i+1];
			_t_56_ += 8.0 * _t_57_;
			_t_55_ = la[k][j-1][i] * _t_56_;
			_t_51_ -= 8.0 * _t_55_;
			_t_59_ = u_0[k][j+1][i-2];
			_t_59_ -= u_0[k][j+1][i+2];
			_t_60_ = -u_0[k][j+1][i-1];
			_t_60_ += u_0[k][j+1][i+1];
			_t_59_ += 8.0 * _t_60_;
			_t_58_ = la[k][j+1][i] * _t_59_;
			_t_51_ += 8.0 * _t_58_;
			_t_61_ = u_0[k][j+2][i-2];
			_t_61_ -= u_0[k][j+2][i+2];
			_t_62_ = -u_0[k][j+2][i-1];
			_t_62_ += u_0[k][j+2][i+1];
			_t_61_ += 8.0 * _t_62_;
			_t_51_ -= la[k][j+2][i] * _t_61_;
			_t_36_ += _t_50_ * _t_51_;
			_t_65_ = stry[j] * strz[k];
			_t_63_ = _t_65_ * 1.0 / 144.0;
			_t_66_ = u_2[k-2][j-2][i];
			_t_66_ -= u_2[k+2][j-2][i];
			_t_67_ = -u_2[k-1][j-2][i];
			_t_67_ += u_2[k+1][j-2][i];
			_t_66_ += 8.0 * _t_67_;
			_t_64_ = la[k][j-2][i] * _t_66_;
			_t_69_ = u_2[k-2][j-1][i];
			_t_69_ -= u_2[k+2][j-1][i];
			_t_70_ = -u_2[k-1][j-1][i];
			_t_70_ += u_2[k+1][j-1][i];
			_t_69_ += 8.0 * _t_70_;
			_t_68_ = la[k][j-1][i] * _t_69_;
			_t_64_ -= 8.0 * _t_68_;
			_t_72_ = u_2[k-2][j+1][i];
			_t_72_ -= u_2[k+2][j+1][i];
			_t_73_ = -u_2[k-1][j+1][i];
			_t_73_ += u_2[k+1][j+1][i];
			_t_72_ += 8.0 * _t_73_;
			_t_71_ = la[k][j+1][i] * _t_72_;
			_t_64_ += 8.0 * _t_71_;
			_t_74_ = u_2[k-2][j+2][i];
			_t_74_ -= u_2[k+2][j+2][i];
			_t_75_ = -u_2[k-1][j+2][i];
			_t_75_ += u_2[k+1][j+2][i];
			_t_74_ += 8.0 * _t_75_;
			_t_64_ -= la[k][j+2][i] * _t_74_;
			_t_36_ += _t_63_ * _t_64_;
			_t_78_ = stry[j] * strz[k];
			_t_76_ = _t_78_ * 1.0 / 144.0;
			_t_79_ = u_2[k-2][j-2][i];
			_t_79_ -= u_2[k-2][j+2][i];
			_t_80_ = -u_2[k-2][j-1][i];
			_t_80_ += u_2[k-2][j+1][i];
			_t_79_ += 8.0 * _t_80_;
			_t_77_ = mu[k-2][j][i] * _t_79_;
			_t_82_ = u_2[k-1][j-2][i];
			_t_82_ -= u_2[k-1][j+2][i];
			_t_83_ = -u_2[k-1][j-1][i];
			_t_83_ += u_2[k-1][j+1][i];
			_t_82_ += 8.0 * _t_83_;
			_t_81_ = mu[k-1][j][i] * _t_82_;
			_t_77_ -= 8.0 * _t_81_;
			_t_85_ = u_2[k+1][j-2][i];
			_t_85_ -= u_2[k+1][j+2][i];
			_t_86_ = -u_2[k+1][j-1][i];
			_t_86_ += u_2[k+1][j+1][i];
			_t_85_ += 8.0 * _t_86_;
			_t_84_ = mu[k+1][j][i] * _t_85_;
			_t_77_ += 8.0 * _t_84_;
			_t_87_ = u_2[k+2][j-2][i];
			_t_87_ -= u_2[k+2][j+2][i];
			_t_88_ = -u_2[k+2][j-1][i];
			_t_88_ += u_2[k+2][j+1][i];
			_t_87_ += 8.0 * _t_88_;
			_t_77_ -= mu[k+2][j][i] * _t_87_;
			_t_36_ += _t_76_ * _t_77_;
			r2 += _t_36_;
			uacc_1kc0jc0ic0 = a1 * uacc_1kc0jc0ic0;
			uacc_1kc0jc0ic0 += cof * r2;
			uacc_1[k*N*N+j*N+i] = uacc_1kc0jc0ic0;
			b_mux1 = mu[k+1][j][i-1] * strx[i-1];
			_t_89_ = mu[k+1][j][i] * strx[i];
			_t_89_ += mu[k+1][j][i-2] * strx[i-2];
			b_mux1 -= 3.0 / 4.0 * _t_89_;
			b_mux2 = mu[k+1][j][i-2] * strx[i-2];
			b_mux2 += mu[k+1][j][i+1] * strx[i+1];
			_t_90_ = mu[k+1][j][i] * strx[i];
			_t_90_ += mu[k+1][j][i-1] * strx[i-1];
			b_mux2 += 3.0 * _t_90_;
			b_mux3 = mu[k+1][j][i-1] * strx[i-1];
			b_mux3 += mu[k+1][j][i+2] * strx[i+2];
			_t_91_ = mu[k+1][j][i+1] * strx[i+1];
			_t_91_ += mu[k+1][j][i] * strx[i];
			b_mux3 += 3.0 * _t_91_;
			b_mux4 = mu[k+1][j][i+1] * strx[i+1];
			_t_92_ = mu[k+1][j][i] * strx[i];
			_t_92_ += mu[k+1][j][i+2] * strx[i+2];
			b_mux4 -= 3.0 / 4.0 * _t_92_;
			b_muy1 = mu[k+1][j-1][i] * stry[j-1];
			_t_93_ = mu[k+1][j][i] * stry[j];
			_t_93_ += mu[k+1][j-2][i] * stry[j-2];
			b_muy1 -= 3.0 / 4.0 * _t_93_;
			b_muy2 = mu[k+1][j-2][i] * stry[j-2];
			b_muy2 += mu[k+1][j+1][i] * stry[j+1];
			_t_94_ = mu[k+1][j][i] * stry[j];
			_t_94_ += mu[k+1][j-1][i] * stry[j-1];
			b_muy2 += 3.0 * _t_94_;
			b_muy3 = mu[k+1][j-1][i] * stry[j-1];
			b_muy3 += mu[k+1][j+2][i] * stry[j+2];
			_t_95_ = mu[k+1][j+1][i] * stry[j+1];
			_t_95_ += mu[k+1][j][i] * stry[j];
			b_muy3 += 3.0 * _t_95_;
			b_muy4 = mu[k+1][j+1][i] * stry[j+1];
			_t_96_ = mu[k+1][j][i] * stry[j];
			_t_96_ += mu[k+1][j+2][i] * stry[j+2];
			b_muy4 -= 3.0 / 4.0 * _t_96_;
			b_muz1 = mu[k][j][i] * strz[k];
			_t_97_ = mu[k+1][j][i] * strz[k+1];
			_t_97_ += mu[k-1][j][i] * strz[k-1];
			b_muz1 -= 3.0 / 4.0 * _t_97_;
			b_muz2 = mu[k-1][j][i] * strz[k-1];
			b_muz2 += mu[k+2][j][i] * strz[k+2];
			_t_98_ = mu[k+1][j][i] * strz[k+1];
			_t_98_ += mu[k][j][i] * strz[k];
			b_muz2 += 3.0 * _t_98_;
			b_muz3 = mu[k][j][i] * strz[k];
			b_muz3 += mu[k+3][j][i] * strz[k+3];
			_t_99_ = mu[k+2][j][i] * strz[k+2];
			_t_99_ += mu[k+1][j][i] * strz[k+1];
			b_muz3 += 3.0 * _t_99_;
			b_muz4 = mu[k+2][j][i] * strz[k+2];
			_t_100_ = mu[k+1][j][i] * strz[k+1];
			_t_100_ += mu[k+3][j][i] * strz[k+3];
			b_muz4 -= 3.0 / 4.0 * _t_100_;
			_t_103_ = u_1[k+1][j][i-2];
			_t_103_ -= u_1[k+1][j][i];
			_t_102_ = b_mux1 * _t_103_;
			_t_104_ = u_1[k+1][j][i-1];
			_t_104_ -= u_1[k+1][j][i];
			_t_102_ += b_mux2 * _t_104_;
			_t_105_ = u_1[k+1][j][i+1];
			_t_105_ -= u_1[k+1][j][i];
			_t_102_ += b_mux3 * _t_105_;
			_t_106_ = u_1[k+1][j][i+2];
			_t_106_ -= u_1[k+1][j][i];
			_t_102_ += b_mux4 * _t_106_;
			_t_101_ = strx[i] * _t_102_;
			_t_108_ = 2.0 * b_muy1;
			_t_108_ += la[k+1][j-1][i] * stry[j-1];
			_t_110_ = la[k+1][j][i] * stry[j];
			_t_110_ += la[k+1][j-2][i] * stry[j-2];
			_t_108_ -= 3.0 / 4.0 * _t_110_;
			_t_109_ = u_1[k+1][j-2][i];
			_t_109_ -= u_1[k+1][j][i];
			_t_107_ = _t_108_ * _t_109_;
			_t_111_ = 2.0 * b_muy2;
			_t_111_ += la[k+1][j-2][i] * stry[j-2];
			_t_111_ += la[k+1][j+1][i] * stry[j+1];
			_t_113_ = la[k+1][j][i] * stry[j];
			_t_113_ += la[k+1][j-1][i] * stry[j-1];
			_t_111_ += 3.0 * _t_113_;
			_t_112_ = u_1[k+1][j-1][i];
			_t_112_ -= u_1[k+1][j][i];
			_t_107_ += _t_111_ * _t_112_;
			_t_114_ = 2.0 * b_muy3;
			_t_114_ += la[k+1][j-1][i] * stry[j-1];
			_t_114_ += la[k+1][j+2][i] * stry[j+2];
			_t_116_ = la[k+1][j+1][i] * stry[j+1];
			_t_116_ += la[k+1][j][i] * stry[j];
			_t_114_ += 3.0 * _t_116_;
			_t_115_ = u_1[k+1][j+1][i];
			_t_115_ -= u_1[k+1][j][i];
			_t_107_ += _t_114_ * _t_115_;
			_t_117_ = 2.0 * b_muy4;
			_t_117_ += la[k+1][j+1][i] * stry[j+1];
			_t_119_ = la[k+1][j][i] * stry[j];
			_t_119_ += la[k+1][j+2][i] * stry[j+2];
			_t_117_ -= 3.0 / 4.0 * _t_119_;
			_t_118_ = u_1[k+1][j+2][i];
			_t_118_ -= u_1[k+1][j][i];
			_t_107_ += _t_117_ * _t_118_;
			_t_101_ += stry[j] * _t_107_;
			_t_121_ = u_1[k-1][j][i];
			_t_121_ -= u_1[k+1][j][i];
			_t_120_ = b_muz1 * _t_121_;
			_t_122_ = u_1[k][j][i];
			_t_122_ -= u_1[k+1][j][i];
			_t_120_ += b_muz2 * _t_122_;
			_t_123_ = u_1[k+2][j][i];
			_t_123_ -= u_1[k+1][j][i];
			_t_120_ += b_muz3 * _t_123_;
			_t_124_ = u_1[k+3][j][i];
			_t_124_ -= u_1[k+1][j][i];
			_t_120_ += b_muz4 * _t_124_;
			_t_101_ += strz[k+1] * _t_120_;
			r3 = 1.0 / 6.0 * _t_101_;
			_t_128_ = strx[i] * stry[j];
			_t_126_ = _t_128_ * 1.0 / 144.0;
			_t_129_ = u_0[k+1][j-2][i-2];
			_t_129_ -= u_0[k+1][j+2][i-2];
			_t_130_ = -u_0[k+1][j-1][i-2];
			_t_130_ += u_0[k+1][j+1][i-2];
			_t_129_ += 8.0 * _t_130_;
			_t_127_ = mu[k+1][j][i-2] * _t_129_;
			_t_132_ = u_0[k+1][j-2][i-1];
			_t_132_ -= u_0[k+1][j+2][i-1];
			_t_133_ = -u_0[k+1][j-1][i-1];
			_t_133_ += u_0[k+1][j+1][i-1];
			_t_132_ += 8.0 * _t_133_;
			_t_131_ = mu[k+1][j][i-1] * _t_132_;
			_t_127_ -= 8.0 * _t_131_;
			_t_135_ = u_0[k+1][j-2][i+1];
			_t_135_ -= u_0[k+1][j+2][i+1];
			_t_136_ = -u_0[k+1][j-1][i+1];
			_t_136_ += u_0[k+1][j+1][i+1];
			_t_135_ += 8.0 * _t_136_;
			_t_134_ = mu[k+1][j][i+1] * _t_135_;
			_t_127_ += 8.0 * _t_134_;
			_t_137_ = u_0[k+1][j-2][i+2];
			_t_137_ -= u_0[k+1][j+2][i+2];
			_t_138_ = -u_0[k+1][j-1][i+2];
			_t_138_ += u_0[k+1][j+1][i+2];
			_t_137_ += 8.0 * _t_138_;
			_t_127_ -= mu[k+1][j][i+2] * _t_137_;
			_t_125_ = _t_126_ * _t_127_;
			_t_141_ = strx[i] * stry[j];
			_t_139_ = _t_141_ * 1.0 / 144.0;
			_t_142_ = u_0[k+1][j-2][i-2];
			_t_142_ -= u_0[k+1][j-2][i+2];
			_t_143_ = -u_0[k+1][j-2][i-1];
			_t_143_ += u_0[k+1][j-2][i+1];
			_t_142_ += 8.0 * _t_143_;
			_t_140_ = la[k+1][j-2][i] * _t_142_;
			_t_145_ = u_0[k+1][j-1][i-2];
			_t_145_ -= u_0[k+1][j-1][i+2];
			_t_146_ = -u_0[k+1][j-1][i-1];
			_t_146_ += u_0[k+1][j-1][i+1];
			_t_145_ += 8.0 * _t_146_;
			_t_144_ = la[k+1][j-1][i] * _t_145_;
			_t_140_ -= 8.0 * _t_144_;
			_t_148_ = u_0[k+1][j+1][i-2];
			_t_148_ -= u_0[k+1][j+1][i+2];
			_t_149_ = -u_0[k+1][j+1][i-1];
			_t_149_ += u_0[k+1][j+1][i+1];
			_t_148_ += 8.0 * _t_149_;
			_t_147_ = la[k+1][j+1][i] * _t_148_;
			_t_140_ += 8.0 * _t_147_;
			_t_150_ = u_0[k+1][j+2][i-2];
			_t_150_ -= u_0[k+1][j+2][i+2];
			_t_151_ = -u_0[k+1][j+2][i-1];
			_t_151_ += u_0[k+1][j+2][i+1];
			_t_150_ += 8.0 * _t_151_;
			_t_140_ -= la[k+1][j+2][i] * _t_150_;
			_t_125_ += _t_139_ * _t_140_;
			_t_154_ = stry[j] * strz[k+1];
			_t_152_ = _t_154_ * 1.0 / 144.0;
			_t_155_ = u_2[k-1][j-2][i];
			_t_155_ -= u_2[k+3][j-2][i];
			_t_156_ = -u_2[k][j-2][i];
			_t_156_ += u_2[k+2][j-2][i];
			_t_155_ += 8.0 * _t_156_;
			_t_153_ = la[k+1][j-2][i] * _t_155_;
			_t_158_ = u_2[k-1][j-1][i];
			_t_158_ -= u_2[k+3][j-1][i];
			_t_159_ = -u_2[k][j-1][i];
			_t_159_ += u_2[k+2][j-1][i];
			_t_158_ += 8.0 * _t_159_;
			_t_157_ = la[k+1][j-1][i] * _t_158_;
			_t_153_ -= 8.0 * _t_157_;
			_t_161_ = u_2[k-1][j+1][i];
			_t_161_ -= u_2[k+3][j+1][i];
			_t_162_ = -u_2[k][j+1][i];
			_t_162_ += u_2[k+2][j+1][i];
			_t_161_ += 8.0 * _t_162_;
			_t_160_ = la[k+1][j+1][i] * _t_161_;
			_t_153_ += 8.0 * _t_160_;
			_t_163_ = u_2[k-1][j+2][i];
			_t_163_ -= u_2[k+3][j+2][i];
			_t_164_ = -u_2[k][j+2][i];
			_t_164_ += u_2[k+2][j+2][i];
			_t_163_ += 8.0 * _t_164_;
			_t_153_ -= la[k+1][j+2][i] * _t_163_;
			_t_125_ += _t_152_ * _t_153_;
			_t_167_ = stry[j] * strz[k+1];
			_t_165_ = _t_167_ * 1.0 / 144.0;
			_t_168_ = u_2[k-1][j-2][i];
			_t_168_ -= u_2[k-1][j+2][i];
			_t_169_ = -u_2[k-1][j-1][i];
			_t_169_ += u_2[k-1][j+1][i];
			_t_168_ += 8.0 * _t_169_;
			_t_166_ = mu[k-1][j][i] * _t_168_;
			_t_171_ = u_2[k][j-2][i];
			_t_171_ -= u_2[k][j+2][i];
			_t_172_ = -u_2[k][j-1][i];
			_t_172_ += u_2[k][j+1][i];
			_t_171_ += 8.0 * _t_172_;
			_t_170_ = mu[k][j][i] * _t_171_;
			_t_166_ -= 8.0 * _t_170_;
			_t_174_ = u_2[k+2][j-2][i];
			_t_174_ -= u_2[k+2][j+2][i];
			_t_175_ = -u_2[k+2][j-1][i];
			_t_175_ += u_2[k+2][j+1][i];
			_t_174_ += 8.0 * _t_175_;
			_t_173_ = mu[k+2][j][i] * _t_174_;
			_t_166_ += 8.0 * _t_173_;
			_t_176_ = u_2[k+3][j-2][i];
			_t_176_ -= u_2[k+3][j+2][i];
			_t_177_ = -u_2[k+3][j-1][i];
			_t_177_ += u_2[k+3][j+1][i];
			_t_176_ += 8.0 * _t_177_;
			_t_166_ -= mu[k+3][j][i] * _t_176_;
			_t_125_ += _t_165_ * _t_166_;
			r3 += _t_125_;
			uacc_1kp1jc0ic0 = a1 * uacc_1kp1jc0ic0;
			uacc_1kp1jc0ic0 += cof * r3;
			uacc_1[(k+1)*N*N+j*N+i] = uacc_1kp1jc0ic0;
		} 
	}
}

__global__ void __launch_bounds__ (128,2) sw4_c (double * uacc_2, double * __restrict__ u_0, double * __restrict__ u_1, double * __restrict__ u_2, double * __restrict__ mu, double * __restrict__ la, double * __restrict__ strx, double * __restrict__ stry, double * __restrict__ strz, int N) {
	//Determing the block's indices
	int blockdim_i= (int)(blockDim.x);
	int i0 = (int)(blockIdx.x)*(blockdim_i);
	int i = max (i0, 0) + (int)(threadIdx.x);
	int blockdim_j= (int)(blockDim.y);
	int j0 = (int)(blockIdx.y)*(blockdim_j);
	int j = max (j0, 0) + (int)(threadIdx.y);
	// Assumptions 
	int a1 = 1;
	double h = 3.7;
	double cof = 1e0 / ( h *  h);


	/* Total 687 flops */
	if (i>=2 & j>=2 & i<=N-3 & j<=N-3) {
#pragma unroll 10 
		for (int k=2; k<=N-3; k++) {
			/* 28 * 3 = 84 flops */
			double mux1 = mu[k*N*N+j*N+i-1] * strx[i-1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * strx[i] + mu[k*N*N+j*N+i-2] * strx[i-2]);
			double mux2 = mu[k*N*N+j*N+i-2] * strx[i-2] + mu[k*N*N+j*N+i+1] * strx[i+1] + 3 * (mu[k*N*N+j*N+i] * strx[i] + mu[k*N*N+j*N+i-1] * strx[i-1]);
			double mux3 = mu[k*N*N+j*N+i-1] * strx[i-1] + mu[k*N*N+j*N+i+2] * strx[i+2] + 3 * (mu[k*N*N+j*N+i+1] * strx[i+1] + mu[k*N*N+j*N+i] * strx[i]);
			double mux4 = mu[k*N*N+j*N+i+1] * strx[i+1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * strx[i] + mu[k*N*N+j*N+i+2] * strx[i+2]);
			double muy1 = mu[k*N*N+(j-1)*N+i] * stry[j-1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * stry[j] + mu[k*N*N+(j-2)*N+i] * stry[j-2]);
			double muy2 = mu[k*N*N+(j-2)*N+i] * stry[j-2] + mu[k*N*N+(j+1)*N+i] * stry[j+1] + 3 * (mu[k*N*N+j*N+i] * stry[j] + mu[k*N*N+(j-1)*N+i] * stry[j-1]);
			double muy3 = mu[k*N*N+(j-1)*N+i] * stry[j-1] + mu[k*N*N+(j+2)*N+i] * stry[j+2] + 3 * (mu[k*N*N+(j+1)*N+i] * stry[j+1] + mu[k*N*N+j*N+i] * stry[j]);
			double muy4 = mu[k*N*N+(j+1)*N+i] * stry[j+1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * stry[j] + mu[k*N*N+(j+2)*N+i] * stry[j+2]);
			double muz1 = mu[(k-1)*N*N+j*N+i] * strz[k-1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * strz[k] + mu[(k-2)*N*N+j*N+i] * strz[k-2]);
			double muz2 = mu[(k-2)*N*N+j*N+i] * strz[k-2] + mu[(k+1)*N*N+j*N+i] * strz[k+1] + 3 * (mu[k*N*N+j*N+i] * strz[k] + mu[(k-1)*N*N+j*N+i] * strz[k-1]);
			double muz3 = mu[(k-1)*N*N+j*N+i] * strz[k-1] + mu[(k+2)*N*N+j*N+i] * strz[k+2] + 3 * (mu[(k+1)*N*N+j*N+i] * strz[k+1] + mu[k*N*N+j*N+i] * strz[k]);
			double muz4 = mu[(k+1)*N*N+j*N+i] * strz[k+1] - 3e0 / 4 * (mu[k*N*N+j*N+i] * strz[k] + mu[(k+2)*N*N+j*N+i] * strz[k+2]);

			double r3 = 1e0 / 6 * (strx[i] * (mux1 * (u_2[k*N*N+j*N+i-2] - u_2[k*N*N+j*N+i]) + mux2 * (u_2[k*N*N+j*N+i-1] - u_2[k*N*N+j*N+i]) + mux3 * (u_2[k*N*N+j*N+i+1] - u_2[k*N*N+j*N+i]) + mux4 * (u_2[k*N*N+j*N+i+2] - u_2[k*N*N+j*N+i])) + stry[j] * (muy1 * (u_2[k*N*N+(j-2)*N+i] - u_2[k*N*N+j*N+i]) + muy2 * (u_2[k*N*N+(j-1)*N+i] - u_2[k*N*N+j*N+i]) + muy3 * (u_2[k*N*N+(j+1)*N+i] - u_2[k*N*N+j*N+i]) + muy4 * (u_2[k*N*N+(j+2)*N+i] - u_2[k*N*N+j*N+i])) + strz[k] * ((2 * muz1 + la[(k-1)*N*N+j*N+i] * strz[k-1] - 3e0 / 4 * (la[k*N*N+j*N+i] * strz[k] + la[(k-2)*N*N+j*N+i] * strz[k-2])) * (u_2[(k-2)*N*N+j*N+i] - u_2[k*N*N+j*N+i]) + (2 * muz2 + la[(k-2)*N*N+j*N+i] * strz[k-2] + la[(k+1)*N*N+j*N+i] * strz[k+1] + 3 * (la[k*N*N+j*N+i] * strz[k] + la[(k-1)*N*N+j*N+i] * strz[k-1])) * (u_2[(k-1)*N*N+j*N+i] - u_2[k*N*N+j*N+i]) + (2 * muz3 + la[(k-1)*N*N+j*N+i] * strz[k-1] + la[(k+2)*N*N+j*N+i] * strz[k+2] + 3 * (la[(k+1)*N*N+j*N+i] * strz[k+1] + la[k*N*N+j*N+i] * strz[k])) * (u_2[(k+1)*N*N+j*N+i] - u_2[k*N*N+j*N+i]) + (2 * muz4 + la[(k+1)*N*N+j*N+i] * strz[k+1] - 3e0 / 4 * (la[k*N*N+j*N+i] * strz[k] + la[(k+2)*N*N+j*N+i] * strz[k+2])) * (u_2[(k+2)*N*N+j*N+i] - u_2[k*N*N+j*N+i])));

			r3 += strx[i] * strz[k] * (1e0 / 144) * (mu[k*N*N+j*N+i-2] * (u_0[(k-2)*N*N+j*N+i-2] - u_0[(k+2)*N*N+j*N+i-2] + 8 * (-u_0[(k-1)*N*N+j*N+i-2] + u_0[(k+1)*N*N+j*N+i-2])) - 8 * (mu[k*N*N+j*N+i-1] * (u_0[(k-2)*N*N+j*N+i-1] - u_0[(k+2)*N*N+j*N+i-1] + 8 * (-u_0[(k-1)*N*N+j*N+i-1] + u_0[(k+1)*N*N+j*N+i-1]))) + 8 * (mu[k*N*N+j*N+i+1] * (u_0[(k-2)*N*N+j*N+i+1] - u_0[(k+2)*N*N+j*N+i+1] + 8 * (-u_0[(k-1)*N*N+j*N+i+1] + u_0[(k+1)*N*N+j*N+i+1]))) - (mu[k*N*N+j*N+i+2] * (u_0[(k-2)*N*N+j*N+i+2] - u_0[(k+2)*N*N+j*N+i+2] + 8 * (-u_0[(k-1)*N*N+j*N+i+2] + u_0[(k+1)*N*N+j*N+i+2]))));
			r3 += strx[i] * strz[k] * (1e0 / 144) * (la[(k-2)*N*N+j*N+i] * (u_0[(k-2)*N*N+j*N+i-2] - u_0[(k-2)*N*N+j*N+i+2] + 8 * (-u_0[(k-2)*N*N+j*N+i-1] + u_0[(k-2)*N*N+j*N+i+1])) - 8 * (la[(k-1)*N*N+j*N+i] * (u_0[(k-1)*N*N+j*N+i-2] - u_0[(k-1)*N*N+j*N+i+2] + 8 * (-u_0[(k-1)*N*N+j*N+i-1] + u_0[(k-1)*N*N+j*N+i+1]))) + 8 * (la[(k+1)*N*N+j*N+i] * (u_0[(k+1)*N*N+j*N+i-2] - u_0[(k+1)*N*N+j*N+i+2] + 8 * (-u_0[(k+1)*N*N+j*N+i-1] + u_0[(k+1)*N*N+j*N+i+1]))) - (la[(k+2)*N*N+j*N+i] * (u_0[(k+2)*N*N+j*N+i-2] - u_0[(k+2)*N*N+j*N+i+2] + 8 * (-u_0[(k+2)*N*N+j*N+i-1] + u_0[(k+2)*N*N+j*N+i+1]))));
			r3 += stry[j] * strz[k] * (1e0 / 144) * (mu[k*N*N+(j-2)*N+i] * (u_1[(k-2)*N*N+(j-2)*N+i] - u_1[(k+2)*N*N+(j-2)*N+i] + 8 * (-u_1[(k-1)*N*N+(j-2)*N+i] + u_1[(k+1)*N*N+(j-2)*N+i])) - 8 * (mu[k*N*N+(j-1)*N+i] * (u_1[(k-2)*N*N+(j-1)*N+i] - u_1[(k+2)*N*N+(j-1)*N+i] + 8 * (-u_1[(k-1)*N*N+(j-1)*N+i] + u_1[(k+1)*N*N+(j-1)*N+i]))) + 8 * (mu[k*N*N+(j+1)*N+i] * (u_1[(k-2)*N*N+(j+1)*N+i] - u_1[(k+2)*N*N+(j+1)*N+i] + 8 * (-u_1[(k-1)*N*N+(j+1)*N+i] + u_1[(k+1)*N*N+(j+1)*N+i]))) - (mu[k*N*N+(j+2)*N+i] * (u_1[(k-2)*N*N+(j+2)*N+i] - u_1[(k+2)*N*N+(j+2)*N+i] + 8 * (-u_1[(k-1)*N*N+(j+2)*N+i] + u_1[(k+1)*N*N+(j+2)*N+i]))));
			r3 += stry[j] * strz[k] * (1e0 / 144) * (la[(k-2)*N*N+j*N+i] * (u_1[(k-2)*N*N+(j-2)*N+i] - u_1[(k-2)*N*N+(j+2)*N+i] + 8 * (-u_1[(k-2)*N*N+(j-1)*N+i] + u_1[(k-2)*N*N+(j+1)*N+i])) - 8 * (la[(k-1)*N*N+j*N+i] * (u_1[(k-1)*N*N+(j-2)*N+i] - u_1[(k-1)*N*N+(j+2)*N+i] + 8 * (-u_1[(k-1)*N*N+(j-1)*N+i] + u_1[(k-1)*N*N+(j+1)*N+i]))) + 8 * (la[(k+1)*N*N+j*N+i] * (u_1[(k+1)*N*N+(j-2)*N+i] - u_1[(k+1)*N*N+(j+2)*N+i] + 8 * (-u_1[(k+1)*N*N+(j-1)*N+i] + u_1[(k+1)*N*N+(j+1)*N+i]))) - (la[(k+2)*N*N+j*N+i] * (u_1[(k+2)*N*N+(j-2)*N+i] - u_1[(k+2)*N*N+(j+2)*N+i] + 8 * (-u_1[(k+2)*N*N+(j-1)*N+i] + u_1[(k+2)*N*N+(j+1)*N+i]))));


			/* 3 * 3 = 9 flops */
			uacc_2[k*N*N+j*N+i] = a1 * uacc_2[k*N*N+j*N+i] + cof * r3;
		} 
	}
}

extern "C" void host_code (double *h_uacc_0, double *h_uacc_1, double *h_uacc_2, double *h_u_0, double *h_u_1, double *h_u_2, double *h_mu, double *h_la, double *h_strx, double *h_stry, double *h_strz, int N) {
	double *uacc_0;
	cudaMalloc (&uacc_0, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for uacc_0\n");
	cudaMemcpy (uacc_0, h_uacc_0, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *uacc_1;
	cudaMalloc (&uacc_1, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for uacc_1\n");
	cudaMemcpy (uacc_1, h_uacc_1, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *uacc_2;
	cudaMalloc (&uacc_2, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for uacc_2\n");
	cudaMemcpy (uacc_2, h_uacc_2, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *u_0;
	cudaMalloc (&u_0, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for u_0\n");
	cudaMemcpy (u_0, h_u_0, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *u_1;
	cudaMalloc (&u_1, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for u_1\n");
	cudaMemcpy (u_1, h_u_1, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *u_2;
	cudaMalloc (&u_2, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for u_2\n");
	cudaMemcpy (u_2, h_u_2, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *mu;
	cudaMalloc (&mu, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for mu\n");
	cudaMemcpy (mu, h_mu, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *la;
	cudaMalloc (&la, sizeof(double)*N*N*N);
	check_error ("Failed to allocate device memory for la\n");
	cudaMemcpy (la, h_la, sizeof(double)*N*N*N, cudaMemcpyHostToDevice);
	double *strx;
	cudaMalloc (&strx, sizeof(double)*N);
	check_error ("Failed to allocate device memory for strx\n");
	cudaMemcpy (strx, h_strx, sizeof(double)*N, cudaMemcpyHostToDevice);
	double *stry;
	cudaMalloc (&stry, sizeof(double)*N);
	check_error ("Failed to allocate device memory for stry\n");
	cudaMemcpy (stry, h_stry, sizeof(double)*N, cudaMemcpyHostToDevice);
	double *strz;
	cudaMalloc (&strz, sizeof(double)*N);
	check_error ("Failed to allocate device memory for strz\n");
	cudaMemcpy (strz, h_strz, sizeof(double)*N, cudaMemcpyHostToDevice);

	dim3 blockconfig_a (16, 8, 1);
	dim3 gridconfig_a (ceil(N, blockconfig_a.x), ceil(N, blockconfig_a.y), 1);
	sw4_a <<<gridconfig_a, blockconfig_a>>> (uacc_0, u_0, u_1, u_2, mu, la, strx, stry, strz, N);

	dim3 blockconfig_b (16, 8, 1);
	dim3 gridconfig_b (ceil(N, blockconfig_b.x), ceil(N, blockconfig_b.y), 1);
	sw4_b <<<gridconfig_b, blockconfig_b>>> (uacc_1, u_0, u_1, u_2, mu, la, strx, stry, strz, N);

	dim3 blockconfig_c (16, 8, 1);
	dim3 gridconfig_c (ceil(N, blockconfig_c.x), ceil(N, blockconfig_c.y), 1);
	sw4_c <<<gridconfig_c, blockconfig_c>>> (uacc_2, u_0, u_1, u_2, mu, la, strx, stry, strz, N);

	cudaMemcpy (h_uacc_0, uacc_0, sizeof(double)*N*N*N, cudaMemcpyDeviceToHost);
	cudaMemcpy (h_uacc_1, uacc_1, sizeof(double)*N*N*N, cudaMemcpyDeviceToHost);
	cudaMemcpy (h_uacc_2, uacc_2, sizeof(double)*N*N*N, cudaMemcpyDeviceToHost);

	cudaFree (uacc_0); 
	cudaFree (uacc_1);
	cudaFree (uacc_2);
	cudaFree (u_0);
	cudaFree (u_1);
	cudaFree (u_2);
	cudaFree (mu);
	cudaFree (la);
	cudaFree (strx);
	cudaFree (stry);
	cudaFree (strz);
}
